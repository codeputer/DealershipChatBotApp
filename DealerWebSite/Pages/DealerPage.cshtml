@page
@model DealerWebSite.Pages.DealerPageModel;

<h1>Welcome to Dealer Page</h1>
<p>Ask your questions in the chat below:</p>


<!-- Script to load the webchat -->
<script>
  (async function () {
    const webTokenUrl = "https://localhost:7021/api/GetWebToken"; // URL to fetch WebChat token
    const chatEndpointUrl = "https://localhost:7021/api/WebChatMessagesAPI"; // URL for WebChat messages

    // Function to fetch a new WebToken
    async function fetchWebToken() {
      const response = await fetch(webTokenUrl, {
        method: "GET",
        headers: {
          Authorization: `Bearer eyJhbGciOiJBMjU2S1ciLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwidHlwIjoiSldUIiwiY3R5IjoiSldUIn0.ORFN4E_d82IIOzLCSQq7aMwv1Kgyq5PjU3ro6tHeAE9kdFE6hhDFJiSIUS-sbtgSp45YHQ4NIyAKFDIyuBxAS-WvF6cUi7ev.ntSq2CWXP0pJ0VsvGJNR9g.QvS5n4uuVD6rGaQDVLehR2C_-RyXEYbJX1jnkLOVaxXLQ7AqPZ3o1cL2aqsVTc_x4UXi3G0RGNbQ-T4IZWtny3jR1YQYbZ_XMdy6zFdl9AHJI5zG7hLg5ZQWTHkKQiBpRVpqVjgKAS9eUJPXngPu9mBoVarSn-htVZQElFQH1kNNqrgdJZRmeMy-E6dMkTt1u8fpPK78olbIhuVk1lVjcbmeQM_3YHwzjmmWYrEDnT2sHnpse7Gk3r5sotv1zx8mL577DodOkCZtUZ15UBDRAvX_DYZGemsxUI9FUjGUg8ASviCBZv8zcugjOdRo2pVaKK8JTdCUcah834-Q2pVoZPHJfgSnCL5_8wPZrTlEgPsPYJc9CDBsjeQk97k1SYHk2rxBC4sgcf9fpNvw1NioAtmnrUcfKfILG7q-5VaWxYTB1VQI8aONZi_xKdBA2GM4pFJohHIJkrBwxGaJjmPvbgMiWgWsLyaDBBTP3biD2KZu1vTRy7GFgD75ktiuR0VhB1vsYY13e7uKk7bjkd3KtTJGFWuGD1Pt4a8tjuM6rEY.ElWQpv1KDnd8_1Sj-7ZCm3EIswYuAsnu3U6gAsy7h5s`,
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) throw new Error("Failed to fetch WebToken");

      const data = await response.json();
      const newToken = data.jwttoken;

      // Save the token to localStorage
      localStorage.setItem("webToken", newToken);

      console.log("Fetched and saved new WebToken:", newToken);

      return newToken;
    }

    // Function to get a valid token (reuse or fetch new)
    async function getWebToken() {
      let token = localStorage.getItem("webToken");
      if (!token) {
        console.log("No token in storage. Fetching a new one...");
        token = await fetchWebToken();
      }
      return token;
    }

    // Function to send chat data
    async function sendChatData(questions) {
      let token = await getWebToken();

      const response = await fetch(chatEndpointUrl, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ questions }),
      });

      if (response.status === 401) {
        console.log("Token expired. Fetching a new one...");
        token = await fetchWebToken();
        return sendChatData(questions);
      }

      if (!response.ok) throw new Error("Failed to send chat data");

      return await response.json();
    }

    // Dynamically inject HTML and CSS for the chat window
    const chatContainer = document.createElement("div");
    chatContainer.id = "chatContainer";
    chatContainer.innerHTML = `
          <div id="chatWindow" contenteditable="true"></div>
          <div id="chatLog"></div>
      `;
    document.body.appendChild(chatContainer);

    // Add embedded CSS
    const style = document.createElement("style");
    style.textContent = `
          #chatContainer {
              width: 400px;
              margin: 20px auto;
              border: 1px solid #ccc;
              padding: 10px;
              font-family: Arial, sans-serif;
          }
          #chatWindow {
              width: 100%;
              height: 150px;
              border: 1px solid #ccc;
              padding: 5px;
              margin-bottom: 10px;
          }
          #chatLog {
              width: 100%;
              height: 200px;
              border: 1px solid #ccc;
              overflow-y: auto;
              padding: 5px;
              background-color: #f9f9f9;
          }
      `;
    document.head.appendChild(style);

    // Initialize questions array
    const questions = [];

    // Add event listener to capture chat messages
    document.querySelector("#chatWindow").addEventListener("input", async (e) => {
      const questionAsked = e.target.textContent;

      // Add the new question to the array
      questions.push({
        QuestionAsked: questionAsked,
        QuestionResponse: "",
      });

      console.log("Updated Questions array:", questions);

      // Send the data to the server
      const response = await sendChatData(questions);

      // Display the response in the chat log
      const chatLog = document.querySelector("#chatLog");
      const responseDiv = document.createElement("div");
      responseDiv.textContent = `Response: ${JSON.stringify(response)}`;
      chatLog.appendChild(responseDiv);

      console.log("Chat Response:", response);
    });

    // Ensure the WebToken is available at script startup
    await getWebToken();
  })();



</script>
